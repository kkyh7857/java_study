// 추상클래스
public abstract class Doll {
	// 추상 메소드가 있는 클래스
	// 반드시 자손클래스가 존재한다.
	// (모든 인형 클래스의 공통조상을 만든것)
	// 추상클래스(하위클래스로부터 추상화를 거쳐 나온 공통의 조상클래스)
	// 추상클래스 안에서 일반 메소드도 사용 가능하다.??
	
	public abstract void get();
	//  ★★★★★
	// 반드시, 하위클래스에서 오버라이딩해야 한다.
	// 추상 메소드에는 {}가 없이, ;로 마친다. 
	// 특별한 기능을 수행하지 않고 다만, 어떤 기능을 수행할지 모르는 메소드인 것이다.
	// 그래서 반드시 하위클래스에서 어떤 기능을 수행할 것이라는 재정의가 필요한 것이다.
	
	// Doll클래스의 get은 이미 다른 곳에서 오버라이딩 되어있다.
	
	// ★★★ 그럼 추상 클래스를 왜 사용할까??
	// 아마도, 이해하기로는 슈퍼클래스의 메소드가 있는데, 
	// 상속 받는 모든 서브클래스에서 그 메소드를 Override 한다면, 그 메소드는 추상 메소드로 만드는 것이 좋다.
	// 메모리 효율 측면과 생산성이 올라가기 때문이다. 
	// 굳이 없어질 메소드 기능을 만들 필요는 없다.
	// 추상메소드가 하나라도 있는 클래스는 앞에 abstract가 붙는 이유는, 이 클래스에 추상메소드가 존재한다는 것이고,
	// 추상클래스 안에 일반 메소드도 사용할 수 있다.
	// 일반 메소드는 상속 받은 메소드 사용하는 것처럼 사용하면 된다.
	public void get2() {
		System.out.println("되나???");
	}
	
}
